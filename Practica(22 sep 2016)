install.packages("car")
#al rededor del 91% de la variable "estatura" es explicada por la recta ajustada
base1<-data.frame(eco,esta)

base1$fitted.mod1<-fitted(mod1)#valores ajustados
base1$residuals.mod1<-residuals(mod1)#residuos del modelo
base1$rstudent.mod1<-rstudent(mod1)#residuos estandarizados
## Esta variable se utiliza para comprobar los supuestos...
####Supuestos de normalidad.. es que los residuos tengan una 
###distribución normal
###para conocer la normalidad se utiliza
##la prueva de shapiro para analizar los residuos
###############residuales.mod1 es y - ^y=e

shapiro.test (base1$rstudent.mod1)

## la prueba de hipotesis shapiro test
###Ho.la muestra tiene una distribución normal
###ha : la muestra no tiene distribución normal.
###tenemos un pvalue de .8172 no se rechaza la hipotesis nula
###porlo tanto se acepta que hay normalidad...
###ahora veremos el resultado en un grafico
qqnorm(base1$rstudent.mod1)
### ahora vamos a revisar la homogeinedad de varianzas
###para la homogeneidad se requiere
### una librería que se llama lmtest, debido a que
## esta se tiene que aplicar la prueba de Breush- pagan test
install.packages("lmtest")
require (lmtest)
bptest (mod1)
###en esta prueba esperamos que haya homogeineidad de la varianza
#     h0: si hay homegeneidad en las varianzas
#     ha: no hay homogeneidad en las varianzas
### en la prueva bptest obtenemos un pvalue de .6108
###por lo tanto no se rechaza la hipotesis nula,
###es decir se acepta con un 95% de confianza LA h0
#para esta prueba se utiliza
dwtest(mod1,alternative="two.sided")
#Ho: no hay autocorrelacion en los residuos
#Ha: hay autocorrelacion en los residuos
#la prueba durbin watson genera un resultado de .9142 por lo que acepta Ho
#el pvalue es mayor a .05 esto quiere decir que no hay autocorrelación en los residuos
#comprobandolo gráficamente
plot(base1$residuals.mod1,pnc=35,ylab = "residuales",xlab = "in")
abline(h=cor(base1$esta,base1$eco))
#si no hay un patron dentro de la grafica, se comprueba que no hay correlación 
#si existe algun problema con los limites se podria crear una nueva base con los rangos
limbase1<-seq(min(base1$eco),max(base1$eco),lenght=10)
limbase1<-data.frame(limbase1)
limbase1<-predict.lm(mod1,limbase1,interval = "prediction",se.fit = TRUE,data=base1)
head(limbase1$fit) #genera limites
matplot(limbase1, limbase1$fit, type="l", xlab = "ingres", ylab = "estatura")
